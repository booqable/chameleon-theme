<link rel="preload" href="{{ 'hero.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">

{%- assign padding_top           = section.settings.padding_top -%}
{%- assign padding_bottom        = section.settings.padding_bottom -%}
{%- assign padding_top_mobile    = section.settings.padding_top_mobile -%}
{%- assign padding_bottom_mobile = section.settings.padding_bottom_mobile -%}
{%- assign availability_image    = section.settings.availability_image -%}
{%- assign availability_text     = section.settings.availability_text -%}

{%- capture variables -%}
  --padding-top: {{ padding_top }}px;
  --padding-bottom: {{ padding_bottom }}px;
  --padding-top-mobile: {{ padding_top_mobile }}px;
  --padding-bottom-mobile: {{ padding_bottom_mobile }}px;
{%- endcapture -%}

{%- if section.blocks.size > 0 -%}
  <div class="hero__wrapper" style="{{- variables | escape -}}">
    {%- for block in section.blocks -%}
      {%- assign title                = block.settings.title -%}
      {%- assign description          = block.settings.description -%}
      {%- assign button_label_1       = block.settings.button_label_1 -%}
      {%- assign button_url_1         = block.settings.button_url_1 -%}
      {%- assign button_label_2       = block.settings.button_label_2 -%}
      {%- assign button_url_2         = block.settings.button_url_2 -%}
      {%- assign text_position        = block.settings.text_position -%}
      {%- assign text_position_mobile = block.settings.text_position_mobile -%}
      {%- assign image                = block.settings.image -%}
      {%- assign image_mobile         = block.settings.image_mobile -%}
      {%- assign background           = block.settings.background -%}
      {%- assign show_overlay         = block.settings.show_overlay -%}
      {%- assign overlay_color        = block.settings.overlay_color -%}
      {%- assign overlay_opacity      = block.settings.overlay_opacity -%}

      {%- capture text_variables -%}
        {%- case text_position -%}
          {%- when 'top-left' -%}
            --text-justify-content: flex-start;
            --text-align-items: flex-start;
            --text-align: left;
            --text-hero-width: 360px;
            --margin-left: 0;
            --margin-right: auto;
          {%- when 'top-center' -%}
            --text-justify-content: center;
            --text-align-items: flex-start;
            --text-align: center;
            --text-hero-width: none;
            --margin-left: auto;
            --margin-right: auto;
          {%- when 'top-right' -%}
            --text-justify-content: flex-end;
            --text-align-items: flex-start;
            --text-align: right;
            --text-hero-width: 360px;
            --margin-left: auto;
            --margin-right: 0;
          {%- when 'middle-left' -%}
            --text-justify-content: flex-start;
            --text-align-items: center;
            --text-align: left;
            --text-hero-width: 360px;
            --margin-left: 0;
            --margin-right: auto;
          {%- when 'center' -%}
            --text-justify-content: center;
            --text-align-items: center;
            --text-align: center;
            --text-hero-width: none;
            --margin-left: auto;
            --margin-right: auto;
          {%- when 'middle-right' -%}
            --text-justify-content: flex-end;
            --text-align-items: center;
            --text-align: right;
            --text-hero-width: 360px;
            --margin-left: auto;
            --margin-right: 0;
          {%- when 'bottom-left' -%}
            --text-justify-content: flex-start;
            --text-align-items: flex-end;
            --text-align: left;
            --text-hero-width: 360px;
            --margin-left: 0;
            --margin-right: auto;
          {%- when 'bottom-center' -%}
            --text-justify-content: center;
            --text-align-items: flex-end;
            --text-align: center;
            --text-hero-width: none;
            --margin-left: auto;
            --margin-right: auto;
          {%- when 'bottom-right' -%}
            --text-justify-content: flex-end;
            --text-align-items: flex-end;
            --text-align: right;
            --text-hero-width: 360px;
            --margin-left: auto;
            --margin-right: 0;
        {%- endcase -%}

        {%- case text_position_mobile -%}
          {%- when 'top-left' -%}
            --text-justify-content-mobile: flex-start;
            --text-align-items-mobile: flex-start;
            --text-align-mobile: left;
          {%- when 'top-center' -%}
            --text-justify-content-mobile: center;
            --text-align-items-mobile: flex-start;
            --text-align-mobile: center;
          {%- when 'top-right' -%}
            --text-justify-content-mobile: flex-end;
            --text-align-items-mobile: flex-start;
            --text-align-mobile: right;
          {%- when 'middle-left' -%}
            --text-justify-content-mobile: flex-start;
            --text-align-items-mobile: center;
            --text-align-mobile: left;
          {%- when 'center' -%}
            --text-justify-content-mobile: center;
            --text-align-items-mobile: center;
            --text-align-mobile: center;
          {%- when 'middle-right' -%}
            --text-justify-content-mobile: flex-end;
            --text-align-items-mobile: center;
            --text-align-mobile: right;
          {%- when 'bottom-left' -%}
            --text-justify-content-mobile: flex-start;
            --text-align-items-mobile: flex-end;
            --text-align-mobile: left;
          {%- when 'bottom-center' -%}
            --text-justify-content-mobile: center;
            --text-align-items-mobile: flex-end;
            --text-align-mobile: center;
          {%- when 'bottom-right' -%}
            --text-justify-content-mobile: flex-end;
            --text-align-items-mobile: flex-end;
            --text-align-mobile: right;
        {%- endcase -%}
      {%- endcapture -%}

      {%- capture image_variables -%}
        --color-hero-background: {{ background }};
        --color-hero-overlay: {{ overlay_color }};
        --opacity-hero-overlay: {{ overlay_opacity }}%;
      {%- endcapture -%}

      {%- if section.blocks.size > 1 -%}
        <div class="hero__slider carousel">
          <div class="hero__slider-inner carousel__inner">
      {%- endif -%}

      <div
        class="hero__container container{% if padding_top != 0 or padding_top_mobile != 0 %} hero__container--padding-top{% endif %}{% if padding_bottom != 0 or padding_bottom_mobile != 0 %} hero__container--padding-bottom{%- endif -%}"
        style="{{- text_variables | escape -}}"
      >
        <div class="hero__inner">
          <div class="hero__content">
            {%- if title != blank -%}
              <h1 class="hero__title">{{- title -}}</h1>
            {%- endif -%}

            {%- if description != blank -%}
              <div class="hero__description text-medium">{{- description -}}</div>
            {%- endif -%}

            {%- if button_label_1 != blank and button_url_1 != blank or button_label_2 != blank and button_url_2 != blank -%}
              <div class="hero__buttons">
                {%- if button_label_1 != blank and button_url_1 != blank -%}
                  <a href="{{  button_url_1 }}" class="hero__button button button--primary button--large">{{- button_label_1 -}}</a>
                {%- endif -%}

                {%- if button_label_2 != blank and button_url_2 != blank -%}
                  <a href="{{  button_url_2 }}" class="hero__button button button--outlined button--large">{{- button_label_2 -}}</a>
                {%- endif -%}
              </div>
            {%- endif -%}
          </div>
        </div>

        {%- if availability_image != blank or availability_text != blank -%}
          <div class="hero__available">
            {%- if availability_image != blank -%}
              <img
                src="{{ availability_image | image_url: 'master' }}"
                alt="{{ availability_image.alt }}"
                class="hero__available-image"
              >
            {%- endif -%}

            {%- if availability_text != blank -%}
              <span class="hero__available-text text-medium">{{- availability_text -}}</span>
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>

      {%- if image != blank or image_mobile != blank -%}
        <div class="hero__images" style="{{- image_variables | escape -}}">
          {%- if image != blank -%}
            <div class="hero__image-wrapper hero__image-wrapper--desktop{%if show_overlay %} hero__image-wrapper--overlay{%- endif -%}">
              {{ image.url | image_tag:
                loading: 'lazy',
                class: 'hero__image',
                widths: '990, 1400, 1900, 2500'
              }}
            </div>
          {%- endif -%}

          {%- if image_mobile != blank -%}
            <div class="hero__image-wrapper hero__image-wrapper--mobile{%if show_overlay %} hero__image-wrapper--overlay{%- endif -%}">
              {{ image_mobile.url | image_tag:
                loading: 'lazy',
                class: 'hero__image',
                widths: '320, 480, 567'
              }}
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}

      {%- if section.blocks.size > 1 -%}
          </div>

          <div class="hero__slider-controls carousel__controls">
            <div class="hero__slider-control carousel__control prev">
              <i class="fa-regular fa-arrow-left"></i>
            </div>
            <div class="hero__slider-control carousel__control next">
              <i class="fa-regular fa-arrow-right"></i>
            </div>
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}
  </div>
{%- endif -%}

<script>
  const blocks = [...document.querySelectorAll('.hero__images')];
  let color;

  const hexToRgb = hex =>
    hex.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i
             ,(m, r, g, b) => '#' + r + r + g + g + b + b)
      .substring(1).match(/.{2}/g)
      .map(x => parseInt(x, 16))


  blocks.forEach(block => {
    let data = block.getAttribute('style'),
        dataObj = data.split(';').reduce((obj, str, index) => {
          let strParts = str.split(':');

          if (strParts[0] && strParts[1]) {
            obj[strParts[0].replace(/\s+/g, '')
                          .replace('--', '')
                          .replaceAll('-', '_')] = strParts[1].trim();
          }
          return obj;
        }, {});

    color = dataObj.color_hero_overlay;

    block.style.setProperty(
      '--color-hero-overlay-rgb',
      `${hexToRgb(color)}`
    );
  })
</script>

{% schema %}
  {
    "name": "Hero",
    "tag": "section",
    "class": "hero",
    "description": "Display a slider with content and background image",
    "blocks":[
      {
        "type": "slide",
        "id": "slide",
        "name": "Slide",
        "settings": [
          {
            "type": "header",
            "content": "Text settings"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Rent heavy equipment"
          },
          {
            "type": "contentEditor",
            "id": "description",
            "label": "Description",
            "default": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique."
          },
          {
            "type": "paragraph",
            "content": "Button #1 settings"
          },
          {
            "type": "text",
            "id": "button_label_1",
            "label": "Label",
            "default": "Check out products"
          },
          {
            "type": "url",
            "id": "button_url_1",
            "label": "Button #1 URL"
          },
          {
            "type": "paragraph",
            "content": "Button #2 settings"
          },
          {
            "type": "text",
            "id": "button_label_2",
            "label": "Label",
            "default": "More info"
          },
          {
            "type": "url",
            "id": "button_url_2",
            "label": "Button #2 URL"
          },
          {
            "type": "header",
            "content": "Background settings"
          },
          {
            "type": "color",
            "id": "background",
            "label": "Background color",
            "default": "#0B1A26"
          },
          {
            "type": "checkbox",
            "id": "show_overlay",
            "default": true,
            "label": "Show overlay"
          },
          {
            "type": "color",
            "id": "overlay_color",
            "label": "Overlay color",
            "default": "#0B1A26"
          },
          {
            "type": "number",
            "id": "overlay_opacity",
            "label": "Overlay opacity",
            "min": 0,
            "max": 100,
            "default": 100,
            "info": "Note: Use positive numbers only"
          },
          {
            "type": "header",
            "content": "Desktop settings"
          },
          {
            "type": "select",
            "id": "text_position",
            "label": "Text positioning",
            "options": [
              {
                "value": "top-left",
                "label": "Top / Left"
              },
              {
                "value": "top-center",
                "label": "Top / Center"
              },
              {
                "value": "top-right",
                "label": "Top / Right"
              },
              {
                "value": "middle-left",
                "label": "Middle / Left"
              },
              {
                "value": "center",
                "label": "Center"
              },
              {
                "value": "middle-right",
                "label": "Middle / Right"
              },
              {
                "value": "bottom-left",
                "label": "Bottom / Left"
              },
              {
                "value": "bottom-center",
                "label": "Bottom / Center"
              },
              {
                "value": "bottom-right",
                "label": "Bottom / Right"
              }
            ],
            "default": "middle-left"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "header",
            "content": "Mobile settings"
          },
          {
            "type": "select",
            "id": "text_position_mobile",
            "label": "Text positioning",
            "options": [
              {
                "value": "top-left",
                "label": "Top / Left"
              },
              {
                "value": "top-center",
                "label": "Top / Center"
              },
              {
                "value": "top-right",
                "label": "Top / Right"
              },
              {
                "value": "middle-left",
                "label": "Middle / Left"
              },
              {
                "value": "center",
                "label": "Center"
              },
              {
                "value": "middle-right",
                "label": "Middle / Right"
              },
              {
                "value": "bottom-left",
                "label": "Bottom / Left"
              },
              {
                "value": "bottom-center",
                "label": "Bottom / Center"
              },
              {
                "value": "bottom-right",
                "label": "Bottom / Right"
              }
            ],
            "default": "top-left"
          },
          {
            "type": "image_picker",
            "id": "image_mobile",
            "label": "Image"
          }
        ]
      }
    ],
    "settings": [
      {
        "type": "header",
        "content": "General settings"
      },
      {
        "type": "text",
        "id": "availability_text",
        "label": "Text",
        "default": "Check availability:"
      },
      {
        "type": "image_picker",
        "id": "availability_image",
        "label": "Image"
      },
      {
        "type": "header",
        "content": "Desktop settings"
      },
      {
        "type": "number",
        "id": "padding_top",
        "label": "Padding top",
        "min": 0,
        "max": 100,
        "default": 20,
        "info": "Note: Use positive numbers only"
      },
      {
        "type": "number",
        "id": "padding_bottom",
        "label": "Padding bottom",
        "min": 0,
        "max": 100,
        "default": 20,
        "info": "Note: Use positive numbers only"
      },
      {
        "type": "header",
        "content": "Mobile settings"
      },
      {
        "type": "number",
        "id": "padding_top_mobile",
        "label": "Padding top",
        "min": 0,
        "max": 100,
        "default": 47,
        "info": "Note: Use positive numbers only"
      },
      {
        "type": "number",
        "id": "padding_bottom_mobile",
        "label": "Padding bottom",
        "min": 0,
        "max": 100,
        "default": 23,
        "info": "Note: Use positive numbers only"
      }
    ]
  }
{% endschema %}

